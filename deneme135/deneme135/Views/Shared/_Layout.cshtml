@RenderSection("CardHeader", required: false)

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Sınav Sistemi</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/navbar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/deneme135.styles.css" asp-append-version="true" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm custom-navbar">
            <div class="container">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-graduation-cap me-2"></i>Sınav Sistemi
                    @if (User.Identity.IsAuthenticated)
                    {
                        <span class="badge bg-light text-dark ms-2">
                            @if (User.IsInRole("Admin"))
                            {
                                <i class="fas fa-user-shield me-1"></i>@:Admin
                            }
                            else if (User.IsInRole("Student"))
                            {
                                <i class="fas fa-user-graduate me-1"></i>@:Öğrenci
                            }
                        </span>
                    }
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")" 
                               asp-controller="Home" asp-action="Index">
                                <i class="fas fa-home nav-icon"></i>Anasayfa
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")" 
                               asp-controller="Home" asp-action="Contact">
                                <i class="fas fa-envelope nav-icon"></i>İletişim
                            </a>
                        </li>
                    </ul>

                    <ul class="navbar-nav">
                        @if (User.Identity.IsAuthenticated)
                        {
                            @if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Admin" ? "active" : "")" 
                                       asp-controller="Admin" asp-action="Index">
                                        <i class="fas fa-user-shield nav-icon"></i>Admin Paneli
                                    </a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Logout">
                                    <i class="fas fa-sign-out-alt nav-icon"></i>Çıkış Yap
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">
                                    <i class="fas fa-sign-in-alt nav-icon"></i>Giriş Yap
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">
                                    <i class="fas fa-user-plus nav-icon"></i>Kayıt Ol
                                </a>
                            </li>
                        }
                        @if (User.IsInRole("Student"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-controller="Test" asp-action="StudentTests">
                                    <i class="fas fa-tasks me-2"></i>Testler
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>

    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/examHub")
            .build();

        connection.on("ReceiveExamCreate", function (message) {
            Swal.fire({
                title: 'Yeni Sınav!',
                text: message,
                icon: 'info',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        });

        connection.on("ReceiveExamUpdate", function (message) {
            Swal.fire({
                title: 'Sınav Güncellendi!',
                text: message,
                icon: 'info',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        });

        connection.on("ReceiveExamDelete", function (message) {
            Swal.fire({
                title: 'Sınav Silindi!',
                text: message,
                icon: 'warning',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
